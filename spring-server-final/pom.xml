<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
							 http://maven.apache.org/maven-v4_0_0.xsd">
	<artifactId>spring-server-final</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<packaging>war</packaging>
	<groupId>spring-server-final</groupId>
	<version>1.0-SNAPSHOT</version>
	<name>spring-server-final</name>
	<url>http://maven.apache.org</url>
	<repositories>
		<repository>
			<id>spring-maven-milestone</id>
			<name>Springframework Maven Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</repository>
	</repositories>
	<properties>
		<spring.version>4.1.6.RELEASE</spring.version>
		<spring.ws.version>2.0.0.RELEASE</spring.ws.version>
		<log4j.version>1.2.16</log4j.version>
		<context.path>spring-server</context.path>
	</properties>
	<dependencies>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.12</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-core</artifactId>
			<version>${spring.ws.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ws.commons.schema</groupId>
			<artifactId>XmlSchema</artifactId>
			<version>1.4.3</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>spring-server-final</finalName>
		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.1</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>

				<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>jaxb2-maven-plugin</artifactId> 
					Now do a maven-install mvn install -Dmaven.test.skip=true, and you will get 
					all required classes automatically created in target folder. See the picture 
					below : <executions> <execution> <goals> <goal>xjc</goal> </goals> </execution> 
					</executions> <configuration> <schemaDirectory>src/main/webapp/schemas/</schemaDirectory> 
					</configuration> </plugin> -->

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jaxb2-maven-plugin</artifactId>
					<version>2.1</version>
			<!-- 		Now do a maven-install mvn install -Dmaven.test.skip=true, and you
					will get
					all required classes automatically created in target folder. See the
					picture
					below : -->
					<executions>
						<execution>
							<goals>
								<goal>xjc</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<schemaDirectory>src/main/webapp/schemas/</schemaDirectory>
					</configuration>
				</plugin>
				<!-- <plugin>
					<groupId>org.jvnet.jaxb2.maven2</groupId>
					<artifactId>maven-jaxb2-plugin</artifactId>
					<version>0.12.3</version>
					<executions>
						<execution>
							<id>add-source-for-demoapp</id>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<schemaDirectory>src/main/webapp/schemas/</schemaDirectory>
								<schemaIncludes>
									<include>GetUserServiceOperations.xsd</include>
									<include>SaveUserServiceOperations.xsd</include>
									<include>UserDetails.xsd</include>
								</schemaIncludes>
								<bindingDirectory>src/main/webapp/schemas/</bindingDirectory>
								<bindingIncludes>
									<include>GetUserServiceOperations.xjb</include>
									<include>SaveUserServiceOperations.xjb</include>
									<include>UserDetails.xjb</include>
								</bindingIncludes>
								<generateDirectory>/target/generated-sources/jaxb/xjc/workflow </generateDirectory>
								<generatePackage>com.javaguys.webservices</generatePackage>
								Other configuration options

							</configuration>
						</execution>
					</executions>
				</plugin> -->
			</plugins>
		</pluginManagement>
	</build>
</project>